import sys
from pathlib import Path
sys.path.append(str(Path(__file__).resolve().parent.parent))

import subprocess
from tools.base_tool import BaseTool
from tool_data import ToolData

class DalfoxTool(BaseTool):
    def run(self, data: ToolData) -> ToolData:
        print("[*] Running DalfoxTool...")

        output_file = Path("D:/results/xss_suspect.txt")
        output_file.parent.mkdir(parents=True, exist_ok=True)

        xss_found = []

        if not data.xss_targets:
            print("‚ö†Ô∏è Kh√¥ng c√≥ URL nghi XSS.")
            return data

        for url in data.xss_targets:
            print(f"[‚Üí] Dalfox ki·ªÉm tra: {url}")
            cmd = ["dalfox", "url", url, "--silence"]

            try:
                result = subprocess.run(cmd, capture_output=True, text=True, timeout=30)
                output = result.stdout.lower()

                if "vuln" in output or "[xss]" in output:
                    print(" [+] Nghi ng·ªù c√≥ XSS:", url)
                    xss_found.append(url)

            except subprocess.TimeoutExpired:
                print(" [-] Qu√° th·ªùi gian:", url)
            except Exception as e:
                print(" [-] L·ªói dalfox:", e)

        if xss_found:
            with output_file.open("w", encoding="utf-8") as f:
                f.write("\n".join(xss_found))
            print(f"[‚úì] Ghi {len(xss_found)} d√≤ng nghi ng·ªù XSS v√†o {output_file}")

        data.xss_results = xss_found
        return data

    def name(self):
        return "Dalfox"

# ‚úÖ Test ri√™ng
if __name__ == "__main__":
    from tool_data import ToolData

    # Load t·ª´ file ch·ª©a XSS target
    file_path = Path("D:/results/katana_links.txt")
    if file_path.exists():
        with file_path.open("r", encoding="utf-8") as f:
            xss_targets = [line.strip() for line in f if "?q=" in line or "?search=" in line or "?s=" in line]
    else:
        xss_targets = ["http://testphp.vulnweb.com/search.php?q=test"]

    data = ToolData(xss_targets=xss_targets)
    result = DalfoxTool().run(data)

    print("\nüéØ URL nghi ng·ªù XSS:")
    for url in result.xss_results:
        print(" -", url)
